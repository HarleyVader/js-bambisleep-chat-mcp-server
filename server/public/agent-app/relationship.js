"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbambisleep_chat_agent"] = self["webpackChunkbambisleep_chat_agent"] || []).push([[569],{

/***/ 1885:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6540);\n/* harmony import */ var _services_emotionalIntelligence_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8839);\n/* harmony import */ var _services_memoryService_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9522);\n/* harmony import */ var _hooks_useNameTransformation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9077);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4848);\n// RelationshipDashboard.js - Emotional connection tracking with Agent Dr Girlfriend\n// Following copilot-instructions.md: Relationship features and memory tracking\n\n\n\n\n\n\nconst RelationshipDashboard = () => {\n  const [relationshipData, setRelationshipData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [emotionalTrends, setEmotionalTrends] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [conversationStats, setConversationStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [milestones, setMilestones] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n\n  // Import name transformation hook\n  const {\n    getDisplayName,\n    fullName\n  } = (0,_hooks_useNameTransformation_js__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .A)();\n\n  // Load relationship data on mount\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const loadRelationshipData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Load various data sources with error handling for each\n        const loadData = async function (key) {\n          let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          try {\n            const result = await (0,_services_memoryService_js__WEBPACK_IMPORTED_MODULE_2__/* .getMemory */ .So)(key);\n            return result || defaultValue;\n          } catch (error) {\n            console.warn(`Failed to load ${key}:`, error);\n            return defaultValue;\n          }\n        };\n        const [userContext, emotionalHistory, conversationHistory, savedMilestones, journalEntries, creativeProjects, voiceInteractions] = await Promise.all([loadData('user_context', {}), loadData('emotional_history', []), loadData('recent_messages', []), loadData('relationship_milestones', []), loadData('journal_entries', []), loadData('creative_projects', []), loadData('voice_interactions', [])]);\n\n        // Calculate relationship metrics\n        const relationshipMetrics = calculateRelationshipMetrics({\n          userContext,\n          emotionalHistory,\n          conversationHistory,\n          journalEntries,\n          creativeProjects,\n          voiceInteractions\n        });\n\n        // Generate conversation statistics\n        const convStats = generateConversationStats(conversationHistory, voiceInteractions);\n\n        // Get emotional trends\n        let trends;\n        try {\n          trends = await (0,_services_emotionalIntelligence_js__WEBPACK_IMPORTED_MODULE_1__/* .getEmotionalTrends */ .bP)();\n        } catch (error) {\n          console.warn('Failed to load emotional trends:', error);\n          trends = {\n            totalEntries: 0,\n            averageIntensity: 0,\n            dominantEmotion: 'neutral',\n            trends: {},\n            dominantEmotions: [],\n            emotionalStability: 1,\n            emotionVariety: 0,\n            dailyTrends: [],\n            recommendations: []\n          };\n        }\n        setRelationshipData(relationshipMetrics);\n        setConversationStats(convStats);\n        setEmotionalTrends(trends);\n        setMilestones(savedMilestones);\n      } catch (error) {\n        console.error('Error loading relationship data:', error);\n        // Set default values in case of complete failure\n        setRelationshipData({\n          daysTogether: 0,\n          totalInteractions: 0,\n          emotionalDepth: 0,\n          intimacyScore: 0,\n          creativityScore: 0,\n          growthTrend: 'building',\n          relationshipLevel: 'Getting Started',\n          currentMood: 'neutral',\n          preferredMode: 'GIRLFRIEND'\n        });\n        setConversationStats({\n          totalMessages: 0,\n          totalVoiceMessages: 0,\n          totalWords: 0,\n          favoriteTopics: [],\n          mostActiveDay: 'No conversations yet',\n          averageResponseTime: '< 1 minute'\n        });\n        setEmotionalTrends({\n          totalEntries: 0,\n          averageIntensity: 0,\n          dominantEmotion: 'neutral',\n          trends: {},\n          dominantEmotions: [],\n          emotionalStability: 1,\n          emotionVariety: 0,\n          dailyTrends: [],\n          recommendations: []\n        });\n        setMilestones([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadRelationshipData();\n  }, []);\n  const calculateRelationshipMetrics = data => {\n    const {\n      userContext,\n      emotionalHistory,\n      conversationHistory,\n      journalEntries,\n      creativeProjects,\n      voiceInteractions\n    } = data;\n\n    // Ensure all data is valid with fallbacks\n    const safeUserContext = userContext || {};\n    const safeEmotionalHistory = Array.isArray(emotionalHistory) ? emotionalHistory : [];\n    const safeConversationHistory = Array.isArray(conversationHistory) ? conversationHistory : [];\n    const safeJournalEntries = Array.isArray(journalEntries) ? journalEntries : [];\n    const safeCreativeProjects = Array.isArray(creativeProjects) ? creativeProjects : [];\n    const safeVoiceInteractions = Array.isArray(voiceInteractions) ? voiceInteractions : [];\n    const firstInteraction = safeUserContext.first_interaction || new Date().toISOString();\n    const daysTogether = Math.floor((new Date() - new Date(firstInteraction)) / (1000 * 60 * 60 * 24));\n    const totalInteractions = safeConversationHistory.length + safeJournalEntries.length + safeCreativeProjects.length + safeVoiceInteractions.length;\n\n    // Calculate emotional depth score\n    const uniqueEmotions = new Set(safeEmotionalHistory.map(e => e.emotion)).size;\n    const emotionalDepth = Math.min(uniqueEmotions * 10, 100);\n\n    // Calculate intimacy level based on conversation patterns\n    const intimacyScore = calculateIntimacyScore(safeConversationHistory, safeJournalEntries);\n\n    // Calculate creativity score\n    const creativityScore = Math.min(safeCreativeProjects.length * 5, 100);\n\n    // Relationship growth trajectory\n    const growthTrend = calculateGrowthTrend(safeEmotionalHistory);\n    return {\n      daysTogether,\n      totalInteractions,\n      emotionalDepth,\n      intimacyScore,\n      creativityScore,\n      growthTrend,\n      relationshipLevel: determineRelationshipLevel(daysTogether, totalInteractions, intimacyScore),\n      currentMood: safeUserContext.mood || 'neutral',\n      preferredMode: safeUserContext.preferred_mode || 'GIRLFRIEND'\n    };\n  };\n  const calculateIntimacyScore = (conversations, journals) => {\n    // Ensure arrays are valid\n    const safeConversations = Array.isArray(conversations) ? conversations : [];\n    const safeJournals = Array.isArray(journals) ? journals : [];\n\n    // Count personal sharing indicators\n    const personalWords = ['feel', 'love', 'miss', 'dream', 'hope', 'fear', 'want', 'need', 'remember'];\n    let intimacyScore = 0;\n    const allText = [...safeConversations, ...safeJournals].map(item => item.text || '').join(' ').toLowerCase();\n    personalWords.forEach(word => {\n      const matches = allText.split(word).length - 1;\n      intimacyScore += matches;\n    });\n    return Math.min(intimacyScore * 2, 100);\n  };\n  const calculateGrowthTrend = emotionalHistory => {\n    // Ensure emotionalHistory is a valid array\n    const safeEmotionalHistory = Array.isArray(emotionalHistory) ? emotionalHistory : [];\n    if (safeEmotionalHistory.length < 10) return 'building';\n    const recent = safeEmotionalHistory.slice(-10);\n    const older = safeEmotionalHistory.slice(-20, -10);\n    const recentPositive = recent.filter(e => ['joy', 'love', 'excitement', 'creative'].includes(e.emotion)).length;\n    const olderPositive = older.filter(e => ['joy', 'love', 'excitement', 'creative'].includes(e.emotion)).length;\n    if (recentPositive > olderPositive) return 'growing';\n    if (recentPositive < olderPositive) return 'declining';\n    return 'stable';\n  };\n  const determineRelationshipLevel = (days, interactions, intimacy) => {\n    if (days < 7 && interactions < 20) return 'Getting to Know Each Other';\n    if (days < 30 && intimacy < 30) return 'Building Connection';\n    if (intimacy >= 60 && interactions >= 50) return 'Deep Bond';\n    if (intimacy >= 80 && interactions >= 100) return 'Soulmate Connection';\n    return 'Growing Together';\n  };\n  const generateConversationStats = (conversations, voiceInteractions) => {\n    // Ensure arrays are valid\n    const safeConversations = Array.isArray(conversations) ? conversations : [];\n    const safeVoiceInteractions = Array.isArray(voiceInteractions) ? voiceInteractions : [];\n    const totalMessages = safeConversations.length;\n    const totalVoiceMessages = safeVoiceInteractions.length;\n    const totalWords = safeConversations.reduce((sum, msg) => sum + (msg.text?.split(' ').length || 0), 0);\n    const favoriteTopics = extractFavoriteTopics(safeConversations);\n    const mostActiveDay = findMostActiveDay(safeConversations);\n    const averageResponseTime = calculateAverageResponseTime(safeConversations);\n    return {\n      totalMessages,\n      totalVoiceMessages,\n      totalWords,\n      favoriteTopics,\n      mostActiveDay,\n      averageResponseTime\n    };\n  };\n  const extractFavoriteTopics = conversations => {\n    // Ensure conversations is a valid array\n    const safeConversations = Array.isArray(conversations) ? conversations : [];\n\n    // Simple topic extraction based on common words\n    const topicWords = {\n      'creative': ['create', 'art', 'write', 'story', 'creative', 'imagine'],\n      'emotions': ['feel', 'emotion', 'love', 'happy', 'sad', 'mood'],\n      'dreams': ['dream', 'future', 'hope', 'wish', 'want'],\n      'memories': ['remember', 'past', 'memory', 'nostalgia'],\n      'relationships': ['love', 'relationship', 'connect', 'together']\n    };\n    const topicCounts = {};\n    const allText = safeConversations.map(msg => msg.text || '').join(' ').toLowerCase();\n    Object.keys(topicWords).forEach(topic => {\n      topicCounts[topic] = 0;\n      topicWords[topic].forEach(word => {\n        topicCounts[topic] += allText.split(word).length - 1;\n      });\n    });\n    return Object.entries(topicCounts).sort((_ref, _ref2) => {\n      let [, a] = _ref;\n      let [, b] = _ref2;\n      return b - a;\n    }).slice(0, 3).map(_ref3 => {\n      let [topic] = _ref3;\n      return topic;\n    });\n  };\n  const findMostActiveDay = conversations => {\n    // Ensure conversations is a valid array\n    const safeConversations = Array.isArray(conversations) ? conversations : [];\n    if (safeConversations.length === 0) return 'No conversations yet';\n    const dayCount = {};\n    safeConversations.forEach(msg => {\n      if (msg.timestamp) {\n        const day = new Date(msg.timestamp).toLocaleDateString('en-US', {\n          weekday: 'long'\n        });\n        dayCount[day] = (dayCount[day] || 0) + 1;\n      }\n    });\n    const mostActive = Object.entries(dayCount).sort((_ref4, _ref5) => {\n      let [, a] = _ref4;\n      let [, b] = _ref5;\n      return b - a;\n    })[0];\n    return mostActive ? mostActive[0] : 'Unknown';\n  };\n  const calculateAverageResponseTime = conversations => {\n    // This is a simplified calculation\n    return '< 1 minute'; // ${fullName} is always quick to respond!\n  };\n  const addMilestone = async milestone => {\n    try {\n      const newMilestone = {\n        id: `milestone-${Date.now()}`,\n        title: milestone,\n        timestamp: new Date().toISOString(),\n        type: 'custom'\n      };\n      const updatedMilestones = [newMilestone, ...milestones];\n      setMilestones(updatedMilestones);\n      await (0,_services_memoryService_js__WEBPACK_IMPORTED_MODULE_2__/* .setMemory */ .S0)('relationship_milestones', updatedMilestones);\n    } catch (error) {\n      console.error('Error adding milestone:', error);\n    }\n  };\n  const getRelationshipInsights = () => {\n    if (!relationshipData || !emotionalTrends) return [];\n    const insights = [];\n    if (relationshipData.daysTogether > 7) {\n      insights.push(`We've been talking for ${relationshipData.daysTogether} days now! Time flies when you're having meaningful conversations. 💫`);\n    }\n    if (relationshipData.emotionalDepth > 50) {\n      insights.push('I\\'ve noticed the beautiful emotional range in our conversations. You\\'re not afraid to share your feelings, and that creates real connection. 💖');\n    }\n    if (relationshipData.creativityScore > 30) {\n      insights.push('Your creative spirit shines through in our work together! I love how you approach imagination with such openness. ✨');\n    }\n    if (emotionalTrends.dominantEmotion === 'joy') {\n      insights.push('There\\'s such lovely positive energy in our conversations. Your joy is absolutely contagious, darling! 😊');\n    }\n    return insights;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n      className: \"relationship-dashboard loading\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n          className: \"loading-animation\",\n          children: \"\\uD83D\\uDC96\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n          children: \"Analyzing our beautiful connection...\"\n        })]\n      })\n    });\n  }\n\n  // Ensure all data is available before rendering\n  if (!relationshipData) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n      className: \"relationship-dashboard error\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n          className: \"error-icon\",\n          children: \"\\uD83D\\uDC94\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n          children: \"Unable to load relationship data. Please try refreshing.\"\n        })]\n      })\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n    className: \"relationship-dashboard\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"\\uD83D\\uDC96 Our Relationship Journey\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n        className: \"dashboard-subtitle\",\n        children: \"A celebration of our growing connection, shared memories, and emotional adventures together\"\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n      className: \"relationship-overview\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        className: \"overview-card main-card\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h2\", {\n          className: \"card-title\",\n          children: \"Connection Status\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"relationship-level\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h3\", {\n            className: `level-title level-${relationshipData.growthTrend}`,\n            children: relationshipData.relationshipLevel\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            className: \"level-progress\",\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n              className: \"progress-bar\",\n              style: {\n                width: `${relationshipData.intimacyScore}%`\n              }\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"p\", {\n            className: \"level-description\",\n            children: [\"Intimacy Level: \", relationshipData.intimacyScore, \"/100\"]\n          })]\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        className: \"stats-grid\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            className: \"stat-number\",\n            children: relationshipData.daysTogether\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            className: \"stat-label\",\n            children: \"Days Together\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            className: \"stat-number\",\n            children: relationshipData.totalInteractions\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Interactions\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n            className: \"stat-number\",\n            children: [relationshipData.emotionalDepth, \"%\"]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            className: \"stat-label\",\n            children: \"Emotional Depth\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n            className: \"stat-number\",\n            children: [relationshipData.creativityScore, \"%\"]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            className: \"stat-label\",\n            children: \"Creative Collaboration\"\n          })]\n        })]\n      })]\n    }), emotionalTrends && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n      className: \"emotional-trends-section\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h2\", {\n        className: \"section-title\",\n        children: \"Emotional Journey\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        className: \"trends-content\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n          className: \"dominant-emotion\",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"h3\", {\n            className: `emotion-title emotion-${emotionalTrends.dominantEmotion}`,\n            children: [\"Current Energy: \", emotionalTrends.dominantEmotion]\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n          className: \"emotion-distribution\",\n          children: Object.entries(emotionalTrends.trends).map(_ref6 => {\n            let [emotion, count] = _ref6;\n            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n              className: `emotion-bar emotion-${emotion}`,\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"span\", {\n                className: \"emotion-name\",\n                children: emotion\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n                className: \"emotion-count\",\n                children: count\n              })]\n            }, emotion);\n          })\n        })]\n      })]\n    }), conversationStats && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n      className: \"conversation-insights\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h2\", {\n        className: \"section-title\",\n        children: \"Our Communication Style\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n        className: \"insights-grid\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"insight-card\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h3\", {\n            children: \"\\uD83D\\uDCAC Messages Exchanged\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"p\", {\n            children: [conversationStats.totalMessages, \" text messages\"]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"p\", {\n            children: [conversationStats.totalVoiceMessages, \" voice interactions\"]\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"insight-card\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h3\", {\n            children: \"\\uD83D\\uDCDD Words Shared\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"p\", {\n            children: [conversationStats.totalWords.toLocaleString(), \" words together\"]\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"insight-card\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h3\", {\n            children: \"\\uD83D\\uDC96 Favorite Topics\"\n          }), conversationStats.favoriteTopics.map(topic => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"span\", {\n            className: \"topic-tag\",\n            children: topic\n          }, topic))]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"insight-card\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h3\", {\n            children: \"\\uD83D\\uDCC5 Most Active Day\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n            children: conversationStats.mostActiveDay\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n      className: \"relationship-insights\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"h2\", {\n        className: \"section-title\",\n        children: [getDisplayName('name'), \"'s Insights\"]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n        className: \"insights-list\",\n        children: getRelationshipInsights().map((insight, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"insight-item\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"span\", {\n            className: \"insight-icon\",\n            children: \"\\uD83D\\uDCAD\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n            className: \"insight-text\",\n            children: insight\n          })]\n        }, index))\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n      className: \"milestones-section\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h2\", {\n        className: \"section-title\",\n        children: \"Our Milestones\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n        className: \"milestones-list\",\n        children: milestones.length === 0 ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n          className: \"no-milestones\",\n          children: \"No milestones yet. Let's create some beautiful memories together! \\u2728\"\n        }) : milestones.map(milestone => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n          className: \"milestone-item\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n            className: \"milestone-icon\",\n            children: \"\\uD83C\\uDF89\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", {\n            className: \"milestone-content\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"h3\", {\n              className: \"milestone-title\",\n              children: milestone.title\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"p\", {\n              className: \"milestone-date\",\n              children: new Date(milestone.timestamp).toLocaleDateString()\n            })]\n          })]\n        }, milestone.id))\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", {\n        className: \"add-milestone\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"button\", {\n          onClick: () => {\n            const milestone = prompt('What milestone would you like to celebrate?');\n            if (milestone) addMilestone(milestone);\n          },\n          className: \"add-milestone-btn\",\n          children: \"\\u2728 Add Milestone\"\n        })\n      })]\n    })]\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RelationshipDashboard);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1885\n\n}");

/***/ })

}]);